// <auto-generated />
using System;
using CarBook.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarBook.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarBook.Domain.Entities.About", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Abouts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Welcome to CarBook, your ultimate destination for seamless car booking and rental services. Whether you're looking for a vehicle for a business trip, a weekend getaway, or daily commuting, CarBook provides a hassle-free experience with a wide selection of cars to suit your needs.  Our platform is designed with convenience in mind, offering easy online reservations, competitive pricing, and a user-friendly interface. We connect customers with trusted rental providers, ensuring reliability, safety, and transparency in every booking.  At CarBook, we prioritize customer satisfaction by providing detailed vehicle information, flexible booking options, and secure payment methods. Our goal is to make car rentals more accessible and stress-free, so you can focus on the journey ahead.  Book your car today and experience the road with confidence!",
                            ImageUrl = "website-template/images/about.jpg",
                            Title = "Welcome to Carbook"
                        });
                });

            modelBuilder.Entity("CarBook.Domain.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppUserRole")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppUserRole = 2,
                            Email = "admin@mail.com",
                            FirstName = "Admin",
                            LastName = "Admin",
                            Password = "admin123"
                        },
                        new
                        {
                            Id = 2,
                            AppUserRole = 1,
                            Email = "user@mail.com",
                            FirstName = "User",
                            LastName = "User",
                            Password = "user123"
                        });
                });

            modelBuilder.Entity("CarBook.Domain.Entities.Banner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Banners");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Rent a car in minutes with CarBook",
                            Title = "Fast & Easy Way To Rent A Car",
                            VideoDescription = "Easy steps for renting a car",
                            VideoUrl = "https://www.youtube.com/watch?v=ZUL0qFMYme8"
                        });
                });

            modelBuilder.Entity("CarBook.Domain.Entities.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BlogAuthorId")
                        .HasColumnType("int");

                    b.Property<int>("BlogCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoverImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BlogAuthorId");

                    b.HasIndex("BlogCategoryId");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BlogAuthorId = 1,
                            BlogCategoryId = 2,
                            Content = "The history of cars is a long and interesting one. It all started with the invention of the wheel, and has evolved into the modern vehicles we see on the road today.",
                            CoverImageUrl = "https://images.nationalgeographic.org/image/upload/t_edhub_resource_key_image/v1638892232/EducationHub/photos/packard-model-b-automobile.jpg",
                            CreatedDate = new DateTime(2024, 7, 30, 16, 20, 0, 0, DateTimeKind.Unspecified),
                            Description = "The history of cars is a long and interesting one.",
                            Title = "Car History"
                        },
                        new
                        {
                            Id = 2,
                            BlogAuthorId = 2,
                            BlogCategoryId = 1,
                            Content = "Formula 1 is a dangerous sport, and accidents are a common occurrence. However, some accidents are more serious than others, and can have a lasting impact on the drivers involved.",
                            CoverImageUrl = "https://i.dunya.com/storage/files/images/2023/03/02/formula-1-YPIe_cover.jpg",
                            CreatedDate = new DateTime(2024, 8, 12, 11, 55, 0, 0, DateTimeKind.Unspecified),
                            Description = "Formula 1 is a dangerous sport, and accidents are a common occurrence.",
                            Title = "Formula 1 Accident"
                        },
                        new
                        {
                            Id = 3,
                            BlogAuthorId = 1,
                            BlogCategoryId = 2,
                            Content = "Electric vehicles (EVs) have come a long way from their early prototypes to the modern, high-performance machines we see today. Advances in battery technology, charging infrastructure, and sustainability efforts have made EVs a practical choice for consumers worldwide.",
                            CoverImageUrl = "https://www.currencytransfer.com/wp-content/uploads/2022/11/ev-2-edit.min_.jpg",
                            CreatedDate = new DateTime(2024, 9, 17, 20, 40, 0, 0, DateTimeKind.Unspecified),
                            Description = "A look at how electric cars have evolved and their impact on the automotive industry.",
                            Title = "The Evolution of Electric Cars"
                        });
                });

            modelBuilder.Entity("CarBook.Domain.Entities.BlogAuthor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BlogAuthors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "John Doe is an experienced automotive journalist with a passion for performance cars and cutting-edge technology. With over a decade of writing about the latest in car reviews, industry trends, and innovations, he brings a unique perspective to the world of automotive content.",
                            ImageUrl = "/website-template/images/person_1.jpg",
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Jane Doe is a seasoned automotive writer with a passion for classic cars and vintage vehicles. With a keen eye for detail and a deep knowledge of automotive history, she brings a unique perspective to the world of car journalism.",
                            ImageUrl = "/website-template/images/person_2.jpg",
                            Name = "Jane Doe"
                        });
                });

            modelBuilder.Entity("CarBook.Domain.Entities.BlogCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BlogCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Car Trends"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Car Technology"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Electric Car"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Car Cleaning"
                        });
                });

            modelBuilder.Entity("CarBook.Domain.Entities.BlogComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.ToTable("BlogComments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BlogId = 1,
                            Content = "The history of cars is fascinating! It's amazing to see how far we've come in such a short time. I’m curious about the future developments in car technology.",
                            CreatedDate = new DateTime(2024, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "johndoe@email.com",
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = 2,
                            BlogId = 2,
                            Content = "Formula 1 accidents are terrifying. The risks drivers face are unimaginable, and it's always shocking to see how they walk away from such crashes.",
                            CreatedDate = new DateTime(2024, 2, 5, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            Email = "janesmith@email.com",
                            Name = "Jane Smith"
                        },
                        new
                        {
                            Id = 3,
                            BlogId = 3,
                            Content = "Electric cars are definitely the future. The advancements in battery technology make them more practical than ever. It's great to see the industry moving towards sustainability.",
                            CreatedDate = new DateTime(2024, 3, 10, 9, 15, 0, 0, DateTimeKind.Unspecified),
                            Email = "carlosrivera@email.com",
                            Name = "Carlos Rivera"
                        },
                        new
                        {
                            Id = 4,
                            BlogId = 3,
                            Content = "The development of electric vehicles is impressive. It’s exciting to think about the impact these cars will have on the environment and the way we drive.",
                            CreatedDate = new DateTime(2024, 4, 15, 18, 45, 0, 0, DateTimeKind.Unspecified),
                            Email = "sarahlee@email.com",
                            Name = "Sarah Lee"
                        },
                        new
                        {
                            Id = 5,
                            BlogId = 2,
                            Content = "Formula 1 accidents may be common, but they always leave a lasting impression. Every time something happens, it makes you appreciate the skill and bravery of the drivers even more.",
                            CreatedDate = new DateTime(2024, 5, 20, 22, 10, 0, 0, DateTimeKind.Unspecified),
                            Email = "mikejohnson@email.com",
                            Name = "Mike Johnson"
                        },
                        new
                        {
                            Id = 6,
                            BlogId = 3,
                            Content = "I’ve always been fascinated by how electric vehicles have evolved. The shift from fossil fuels to electricity is one of the most important movements in the auto industry.",
                            CreatedDate = new DateTime(2024, 6, 25, 7, 5, 0, 0, DateTimeKind.Unspecified),
                            Email = "emilygreen@email.com",
                            Name = "Emily Green"
                        });
                });

            modelBuilder.Entity("CarBook.Domain.Entities.BlogTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BlogTags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "History"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Tech"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Trend"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Interesting"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Future of Cars"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Concept Cars"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Hybrid Cars"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Iconic"
                        });
                });

            modelBuilder.Entity("CarBook.Domain.Entities.BlogTagCloud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<int>("BlogTagId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.HasIndex("BlogTagId");

                    b.ToTable("BlogTagClouds");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BlogId = 1,
                            BlogTagId = 1
                        },
                        new
                        {
                            Id = 2,
                            BlogId = 1,
                            BlogTagId = 4
                        },
                        new
                        {
                            Id = 3,
                            BlogId = 3,
                            BlogTagId = 2
                        },
                        new
                        {
                            Id = 4,
                            BlogId = 3,
                            BlogTagId = 5
                        },
                        new
                        {
                            Id = 5,
                            BlogId = 3,
                            BlogTagId = 3
                        },
                        new
                        {
                            Id = 6,
                            BlogId = 1,
                            BlogTagId = 6
                        },
                        new
                        {
                            Id = 7,
                            BlogId = 3,
                            BlogTagId = 7
                        },
                        new
                        {
                            Id = 8,
                            BlogId = 2,
                            BlogTagId = 8
                        });
                });

            modelBuilder.Entity("CarBook.Domain.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ford"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Mercedes"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Range Rover"
                        },
                        new
                        {
                            Id = 4,
                            Name = "McLaren"
                        },
                        new
                        {
                            Id = 5,
                            Name = "BMW"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Alfa Romeo"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Jeep"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Audi"
                        });
                });

            modelBuilder.Entity("CarBook.Domain.Entities.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BigImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoverImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FuelType")
                        .HasColumnType("int");

                    b.Property<int>("Km")
                        .HasColumnType("int");

                    b.Property<byte>("Luggage")
                        .HasColumnType("tinyint");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<byte>("SeatCount")
                        .HasColumnType("tinyint");

                    b.Property<int>("TransmissionType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BigImageUrl = "/bigImageUrl",
                            CoverImageUrl = "/website-template/images/car-4.jpg",
                            FuelType = 1,
                            Km = 250,
                            Luggage = (byte)2,
                            ModelId = 1,
                            SeatCount = (byte)2,
                            TransmissionType = 1
                        },
                        new
                        {
                            Id = 2,
                            BigImageUrl = "/bigImageUrl",
                            CoverImageUrl = "/website-template/images/car-1.jpg",
                            FuelType = 1,
                            Km = 50,
                            Luggage = (byte)3,
                            ModelId = 2,
                            SeatCount = (byte)2,
                            TransmissionType = 2
                        },
                        new
                        {
                            Id = 3,
                            BigImageUrl = "/bigImageUrl",
                            CoverImageUrl = "/website-template/images/car-3.jpg",
                            FuelType = 1,
                            Km = 0,
                            Luggage = (byte)1,
                            ModelId = 3,
                            SeatCount = (byte)2,
                            TransmissionType = 2
                        },
                        new
                        {
                            Id = 4,
                            BigImageUrl = "/bigImageUrl",
                            CoverImageUrl = "/website-template/images/car-2.jpg",
                            FuelType = 2,
                            Km = 1000,
                            Luggage = (byte)6,
                            ModelId = 4,
                            SeatCount = (byte)4,
                            TransmissionType = 2
                        },
                        new
                        {
                            Id = 5,
                            BigImageUrl = "/bigImageUrl",
                            CoverImageUrl = "/website-template/images/car-5.jpg",
                            FuelType = 1,
                            Km = 100,
                            Luggage = (byte)4,
                            ModelId = 5,
                            SeatCount = (byte)4,
                            TransmissionType = 1
                        },
                        new
                        {
                            Id = 6,
                            BigImageUrl = "/bigImageUrl",
                            CoverImageUrl = "/website-template/images/car-6.jpg",
                            FuelType = 1,
                            Km = 0,
                            Luggage = (byte)2,
                            ModelId = 6,
                            SeatCount = (byte)2,
                            TransmissionType = 2
                        },
                        new
                        {
                            Id = 7,
                            BigImageUrl = "/bigImageUrl",
                            CoverImageUrl = "/website-template/images/car-7.jpg",
                            FuelType = 1,
                            Km = 0,
                            Luggage = (byte)2,
                            ModelId = 7,
                            SeatCount = (byte)2,
                            TransmissionType = 1
                        },
                        new
                        {
                            Id = 8,
                            BigImageUrl = "/bigImageUrl",
                            CoverImageUrl = "/website-template/images/car-8.jpg",
                            FuelType = 1,
                            Km = 850,
                            Luggage = (byte)6,
                            ModelId = 8,
                            SeatCount = (byte)4,
                            TransmissionType = 2
                        },
                        new
                        {
                            Id = 9,
                            BigImageUrl = "/bigImageUrl",
                            CoverImageUrl = "/website-template/images/car-10.jpg",
                            FuelType = 1,
                            Km = 0,
                            Luggage = (byte)1,
                            ModelId = 9,
                            SeatCount = (byte)2,
                            TransmissionType = 1
                        },
                        new
                        {
                            Id = 10,
                            BigImageUrl = "/bigImageUrl",
                            CoverImageUrl = "/website-template/images/car-11.jpg",
                            FuelType = 2,
                            Km = 800,
                            Luggage = (byte)4,
                            ModelId = 10,
                            SeatCount = (byte)4,
                            TransmissionType = 2
                        },
                        new
                        {
                            Id = 11,
                            BigImageUrl = "/bigImageUrl",
                            CoverImageUrl = "/website-template/images/car-12.jpg",
                            FuelType = 1,
                            Km = 1249,
                            Luggage = (byte)4,
                            ModelId = 11,
                            SeatCount = (byte)4,
                            TransmissionType = 1
                        });
                });

            modelBuilder.Entity("CarBook.Domain.Entities.CarDescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.ToTable("CarDescriptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 1,
                            Description = "A legendary American muscle car, the GT500 boasts supercharged V8 power and a racing heritage rooted in Carroll Shelby’s performance legacy."
                        },
                        new
                        {
                            Id = 2,
                            CarId = 3,
                            Description = "A compact roadster with a hand-built AMG V8, blending luxury with raw performance in a retractable hardtop design."
                        },
                        new
                        {
                            Id = 3,
                            CarId = 4,
                            Description = "A groundbreaking hybrid hypercar, the P1 combines F1-inspired aerodynamics with electric-assisted twin-turbo V8 power for extreme performance."
                        },
                        new
                        {
                            Id = 4,
                            CarId = 5,
                            Description = "A stylish luxury SUV that redefined urban off-roading, known for its sleek design and advanced terrain response system."
                        },
                        new
                        {
                            Id = 5,
                            CarId = 6,
                            Description = "A high-performance sports sedan, the M3 has dominated track and street alike since the 1980s with its precision engineering and aggressive styling."
                        },
                        new
                        {
                            Id = 6,
                            CarId = 7,
                            Description = "An exclusive Italian roadster featuring a Ferrari-derived V8, hand-crafted design, and an unmistakable exhaust note."
                        },
                        new
                        {
                            Id = 7,
                            CarId = 8,
                            Description = "A refined coupe that merges sporty dynamics with cutting-edge technology, positioned between luxury and performance."
                        },
                        new
                        {
                            Id = 8,
                            CarId = 9,
                            Description = "An off-road icon, the Rubicon is designed for extreme terrain with its rugged build, locking differentials, and legendary 4x4 capabilities."
                        },
                        new
                        {
                            Id = 9,
                            CarId = 10,
                            Description = "A front-mid-engine sports car developed by AMG, delivering thrilling performance with a powerful twin-turbo V8."
                        },
                        new
                        {
                            Id = 10,
                            CarId = 11,
                            Description = "A premium compact hatchback that offers advanced tech, efficient performance, and the luxury appeal of the Mercedes-Benz brand."
                        },
                        new
                        {
                            Id = 11,
                            CarId = 12,
                            Description = "A stylish and compact city car that delivers German engineering, premium features, and agile handling in a small package."
                        });
                });

            modelBuilder.Entity("CarBook.Domain.Entities.CarFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("FeatureId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("FeatureId");

                    b.ToTable("CarFeatures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Available = true,
                            CarId = 1,
                            FeatureId = 1
                        },
                        new
                        {
                            Id = 2,
                            Available = true,
                            CarId = 1,
                            FeatureId = 2
                        },
                        new
                        {
                            Id = 3,
                            Available = false,
                            CarId = 1,
                            FeatureId = 3
                        },
                        new
                        {
                            Id = 4,
                            Available = true,
                            CarId = 1,
                            FeatureId = 4
                        },
                        new
                        {
                            Id = 5,
                            Available = true,
                            CarId = 1,
                            FeatureId = 5
                        },
                        new
                        {
                            Id = 6,
                            Available = true,
                            CarId = 1,
                            FeatureId = 6
                        },
                        new
                        {
                            Id = 7,
                            Available = false,
                            CarId = 1,
                            FeatureId = 7
                        },
                        new
                        {
                            Id = 8,
                            Available = true,
                            CarId = 1,
                            FeatureId = 8
                        },
                        new
                        {
                            Id = 9,
                            Available = false,
                            CarId = 1,
                            FeatureId = 9
                        },
                        new
                        {
                            Id = 10,
                            Available = true,
                            CarId = 1,
                            FeatureId = 10
                        },
                        new
                        {
                            Id = 11,
                            Available = true,
                            CarId = 1,
                            FeatureId = 11
                        },
                        new
                        {
                            Id = 12,
                            Available = true,
                            CarId = 1,
                            FeatureId = 12
                        },
                        new
                        {
                            Id = 13,
                            Available = false,
                            CarId = 1,
                            FeatureId = 13
                        },
                        new
                        {
                            Id = 14,
                            Available = true,
                            CarId = 2,
                            FeatureId = 1
                        },
                        new
                        {
                            Id = 15,
                            Available = true,
                            CarId = 2,
                            FeatureId = 2
                        },
                        new
                        {
                            Id = 16,
                            Available = true,
                            CarId = 2,
                            FeatureId = 3
                        },
                        new
                        {
                            Id = 17,
                            Available = true,
                            CarId = 2,
                            FeatureId = 4
                        },
                        new
                        {
                            Id = 18,
                            Available = false,
                            CarId = 2,
                            FeatureId = 5
                        },
                        new
                        {
                            Id = 19,
                            Available = true,
                            CarId = 2,
                            FeatureId = 6
                        },
                        new
                        {
                            Id = 20,
                            Available = false,
                            CarId = 2,
                            FeatureId = 7
                        },
                        new
                        {
                            Id = 21,
                            Available = true,
                            CarId = 2,
                            FeatureId = 8
                        },
                        new
                        {
                            Id = 22,
                            Available = false,
                            CarId = 2,
                            FeatureId = 9
                        },
                        new
                        {
                            Id = 23,
                            Available = true,
                            CarId = 2,
                            FeatureId = 10
                        },
                        new
                        {
                            Id = 24,
                            Available = true,
                            CarId = 2,
                            FeatureId = 11
                        },
                        new
                        {
                            Id = 25,
                            Available = true,
                            CarId = 2,
                            FeatureId = 12
                        },
                        new
                        {
                            Id = 26,
                            Available = false,
                            CarId = 2,
                            FeatureId = 13
                        },
                        new
                        {
                            Id = 27,
                            Available = true,
                            CarId = 3,
                            FeatureId = 1
                        },
                        new
                        {
                            Id = 28,
                            Available = true,
                            CarId = 3,
                            FeatureId = 2
                        },
                        new
                        {
                            Id = 29,
                            Available = true,
                            CarId = 3,
                            FeatureId = 3
                        },
                        new
                        {
                            Id = 30,
                            Available = true,
                            CarId = 3,
                            FeatureId = 4
                        },
                        new
                        {
                            Id = 31,
                            Available = false,
                            CarId = 3,
                            FeatureId = 5
                        },
                        new
                        {
                            Id = 32,
                            Available = true,
                            CarId = 3,
                            FeatureId = 6
                        },
                        new
                        {
                            Id = 33,
                            Available = false,
                            CarId = 3,
                            FeatureId = 7
                        },
                        new
                        {
                            Id = 34,
                            Available = true,
                            CarId = 3,
                            FeatureId = 8
                        },
                        new
                        {
                            Id = 35,
                            Available = true,
                            CarId = 3,
                            FeatureId = 9
                        },
                        new
                        {
                            Id = 36,
                            Available = false,
                            CarId = 3,
                            FeatureId = 10
                        },
                        new
                        {
                            Id = 37,
                            Available = true,
                            CarId = 3,
                            FeatureId = 11
                        },
                        new
                        {
                            Id = 38,
                            Available = true,
                            CarId = 3,
                            FeatureId = 12
                        },
                        new
                        {
                            Id = 39,
                            Available = true,
                            CarId = 3,
                            FeatureId = 13
                        },
                        new
                        {
                            Id = 40,
                            Available = true,
                            CarId = 4,
                            FeatureId = 1
                        },
                        new
                        {
                            Id = 41,
                            Available = true,
                            CarId = 4,
                            FeatureId = 2
                        },
                        new
                        {
                            Id = 42,
                            Available = false,
                            CarId = 4,
                            FeatureId = 3
                        },
                        new
                        {
                            Id = 43,
                            Available = true,
                            CarId = 4,
                            FeatureId = 4
                        },
                        new
                        {
                            Id = 44,
                            Available = true,
                            CarId = 4,
                            FeatureId = 5
                        },
                        new
                        {
                            Id = 45,
                            Available = true,
                            CarId = 4,
                            FeatureId = 6
                        },
                        new
                        {
                            Id = 46,
                            Available = true,
                            CarId = 4,
                            FeatureId = 7
                        },
                        new
                        {
                            Id = 47,
                            Available = false,
                            CarId = 4,
                            FeatureId = 8
                        },
                        new
                        {
                            Id = 48,
                            Available = true,
                            CarId = 4,
                            FeatureId = 9
                        },
                        new
                        {
                            Id = 49,
                            Available = true,
                            CarId = 4,
                            FeatureId = 10
                        },
                        new
                        {
                            Id = 50,
                            Available = true,
                            CarId = 4,
                            FeatureId = 11
                        },
                        new
                        {
                            Id = 51,
                            Available = true,
                            CarId = 4,
                            FeatureId = 12
                        },
                        new
                        {
                            Id = 52,
                            Available = false,
                            CarId = 4,
                            FeatureId = 13
                        },
                        new
                        {
                            Id = 53,
                            Available = true,
                            CarId = 5,
                            FeatureId = 1
                        },
                        new
                        {
                            Id = 54,
                            Available = true,
                            CarId = 5,
                            FeatureId = 2
                        },
                        new
                        {
                            Id = 55,
                            Available = true,
                            CarId = 5,
                            FeatureId = 3
                        },
                        new
                        {
                            Id = 56,
                            Available = false,
                            CarId = 5,
                            FeatureId = 4
                        },
                        new
                        {
                            Id = 57,
                            Available = true,
                            CarId = 5,
                            FeatureId = 5
                        },
                        new
                        {
                            Id = 58,
                            Available = true,
                            CarId = 5,
                            FeatureId = 6
                        },
                        new
                        {
                            Id = 59,
                            Available = false,
                            CarId = 5,
                            FeatureId = 7
                        },
                        new
                        {
                            Id = 60,
                            Available = true,
                            CarId = 5,
                            FeatureId = 8
                        },
                        new
                        {
                            Id = 61,
                            Available = false,
                            CarId = 5,
                            FeatureId = 9
                        },
                        new
                        {
                            Id = 62,
                            Available = true,
                            CarId = 5,
                            FeatureId = 10
                        },
                        new
                        {
                            Id = 63,
                            Available = true,
                            CarId = 5,
                            FeatureId = 11
                        },
                        new
                        {
                            Id = 64,
                            Available = true,
                            CarId = 5,
                            FeatureId = 12
                        },
                        new
                        {
                            Id = 65,
                            Available = true,
                            CarId = 5,
                            FeatureId = 13
                        },
                        new
                        {
                            Id = 66,
                            Available = true,
                            CarId = 6,
                            FeatureId = 1
                        },
                        new
                        {
                            Id = 67,
                            Available = true,
                            CarId = 6,
                            FeatureId = 2
                        },
                        new
                        {
                            Id = 68,
                            Available = false,
                            CarId = 6,
                            FeatureId = 3
                        },
                        new
                        {
                            Id = 69,
                            Available = true,
                            CarId = 6,
                            FeatureId = 4
                        },
                        new
                        {
                            Id = 70,
                            Available = true,
                            CarId = 6,
                            FeatureId = 5
                        },
                        new
                        {
                            Id = 71,
                            Available = true,
                            CarId = 6,
                            FeatureId = 6
                        },
                        new
                        {
                            Id = 72,
                            Available = true,
                            CarId = 6,
                            FeatureId = 7
                        },
                        new
                        {
                            Id = 73,
                            Available = true,
                            CarId = 6,
                            FeatureId = 8
                        },
                        new
                        {
                            Id = 74,
                            Available = false,
                            CarId = 6,
                            FeatureId = 9
                        },
                        new
                        {
                            Id = 75,
                            Available = true,
                            CarId = 6,
                            FeatureId = 10
                        },
                        new
                        {
                            Id = 76,
                            Available = true,
                            CarId = 6,
                            FeatureId = 11
                        },
                        new
                        {
                            Id = 77,
                            Available = false,
                            CarId = 6,
                            FeatureId = 12
                        },
                        new
                        {
                            Id = 78,
                            Available = true,
                            CarId = 6,
                            FeatureId = 13
                        },
                        new
                        {
                            Id = 79,
                            Available = true,
                            CarId = 7,
                            FeatureId = 1
                        },
                        new
                        {
                            Id = 80,
                            Available = true,
                            CarId = 7,
                            FeatureId = 2
                        },
                        new
                        {
                            Id = 81,
                            Available = true,
                            CarId = 7,
                            FeatureId = 3
                        },
                        new
                        {
                            Id = 82,
                            Available = true,
                            CarId = 7,
                            FeatureId = 4
                        },
                        new
                        {
                            Id = 83,
                            Available = true,
                            CarId = 7,
                            FeatureId = 5
                        },
                        new
                        {
                            Id = 84,
                            Available = true,
                            CarId = 7,
                            FeatureId = 6
                        },
                        new
                        {
                            Id = 85,
                            Available = false,
                            CarId = 7,
                            FeatureId = 7
                        },
                        new
                        {
                            Id = 86,
                            Available = true,
                            CarId = 7,
                            FeatureId = 8
                        },
                        new
                        {
                            Id = 87,
                            Available = true,
                            CarId = 7,
                            FeatureId = 9
                        },
                        new
                        {
                            Id = 88,
                            Available = false,
                            CarId = 7,
                            FeatureId = 10
                        },
                        new
                        {
                            Id = 89,
                            Available = true,
                            CarId = 7,
                            FeatureId = 11
                        },
                        new
                        {
                            Id = 90,
                            Available = true,
                            CarId = 7,
                            FeatureId = 12
                        },
                        new
                        {
                            Id = 91,
                            Available = false,
                            CarId = 7,
                            FeatureId = 13
                        },
                        new
                        {
                            Id = 92,
                            Available = true,
                            CarId = 8,
                            FeatureId = 1
                        },
                        new
                        {
                            Id = 93,
                            Available = true,
                            CarId = 8,
                            FeatureId = 2
                        },
                        new
                        {
                            Id = 94,
                            Available = false,
                            CarId = 8,
                            FeatureId = 3
                        },
                        new
                        {
                            Id = 95,
                            Available = true,
                            CarId = 8,
                            FeatureId = 4
                        },
                        new
                        {
                            Id = 96,
                            Available = false,
                            CarId = 8,
                            FeatureId = 5
                        },
                        new
                        {
                            Id = 97,
                            Available = true,
                            CarId = 8,
                            FeatureId = 6
                        },
                        new
                        {
                            Id = 98,
                            Available = false,
                            CarId = 8,
                            FeatureId = 7
                        },
                        new
                        {
                            Id = 99,
                            Available = true,
                            CarId = 8,
                            FeatureId = 8
                        },
                        new
                        {
                            Id = 100,
                            Available = true,
                            CarId = 8,
                            FeatureId = 9
                        },
                        new
                        {
                            Id = 101,
                            Available = true,
                            CarId = 8,
                            FeatureId = 10
                        },
                        new
                        {
                            Id = 102,
                            Available = true,
                            CarId = 8,
                            FeatureId = 11
                        },
                        new
                        {
                            Id = 103,
                            Available = false,
                            CarId = 8,
                            FeatureId = 12
                        },
                        new
                        {
                            Id = 104,
                            Available = true,
                            CarId = 8,
                            FeatureId = 13
                        },
                        new
                        {
                            Id = 105,
                            Available = true,
                            CarId = 9,
                            FeatureId = 1
                        },
                        new
                        {
                            Id = 106,
                            Available = true,
                            CarId = 9,
                            FeatureId = 2
                        },
                        new
                        {
                            Id = 107,
                            Available = false,
                            CarId = 9,
                            FeatureId = 3
                        },
                        new
                        {
                            Id = 108,
                            Available = true,
                            CarId = 9,
                            FeatureId = 4
                        },
                        new
                        {
                            Id = 109,
                            Available = false,
                            CarId = 9,
                            FeatureId = 5
                        },
                        new
                        {
                            Id = 110,
                            Available = true,
                            CarId = 9,
                            FeatureId = 6
                        },
                        new
                        {
                            Id = 111,
                            Available = false,
                            CarId = 9,
                            FeatureId = 7
                        },
                        new
                        {
                            Id = 112,
                            Available = true,
                            CarId = 9,
                            FeatureId = 8
                        },
                        new
                        {
                            Id = 113,
                            Available = true,
                            CarId = 9,
                            FeatureId = 9
                        },
                        new
                        {
                            Id = 114,
                            Available = false,
                            CarId = 9,
                            FeatureId = 10
                        },
                        new
                        {
                            Id = 115,
                            Available = true,
                            CarId = 9,
                            FeatureId = 11
                        },
                        new
                        {
                            Id = 116,
                            Available = false,
                            CarId = 9,
                            FeatureId = 12
                        },
                        new
                        {
                            Id = 117,
                            Available = true,
                            CarId = 9,
                            FeatureId = 13
                        },
                        new
                        {
                            Id = 118,
                            Available = true,
                            CarId = 10,
                            FeatureId = 1
                        },
                        new
                        {
                            Id = 119,
                            Available = true,
                            CarId = 10,
                            FeatureId = 2
                        },
                        new
                        {
                            Id = 120,
                            Available = true,
                            CarId = 10,
                            FeatureId = 3
                        },
                        new
                        {
                            Id = 121,
                            Available = false,
                            CarId = 10,
                            FeatureId = 4
                        },
                        new
                        {
                            Id = 122,
                            Available = true,
                            CarId = 10,
                            FeatureId = 5
                        },
                        new
                        {
                            Id = 123,
                            Available = true,
                            CarId = 10,
                            FeatureId = 6
                        },
                        new
                        {
                            Id = 124,
                            Available = false,
                            CarId = 10,
                            FeatureId = 7
                        },
                        new
                        {
                            Id = 125,
                            Available = true,
                            CarId = 10,
                            FeatureId = 8
                        },
                        new
                        {
                            Id = 126,
                            Available = true,
                            CarId = 10,
                            FeatureId = 9
                        },
                        new
                        {
                            Id = 127,
                            Available = true,
                            CarId = 10,
                            FeatureId = 10
                        },
                        new
                        {
                            Id = 128,
                            Available = true,
                            CarId = 10,
                            FeatureId = 11
                        },
                        new
                        {
                            Id = 129,
                            Available = false,
                            CarId = 10,
                            FeatureId = 12
                        },
                        new
                        {
                            Id = 130,
                            Available = true,
                            CarId = 10,
                            FeatureId = 13
                        },
                        new
                        {
                            Id = 131,
                            Available = true,
                            CarId = 11,
                            FeatureId = 1
                        },
                        new
                        {
                            Id = 132,
                            Available = true,
                            CarId = 11,
                            FeatureId = 2
                        },
                        new
                        {
                            Id = 133,
                            Available = true,
                            CarId = 11,
                            FeatureId = 3
                        },
                        new
                        {
                            Id = 134,
                            Available = true,
                            CarId = 11,
                            FeatureId = 4
                        },
                        new
                        {
                            Id = 135,
                            Available = false,
                            CarId = 11,
                            FeatureId = 5
                        },
                        new
                        {
                            Id = 136,
                            Available = true,
                            CarId = 11,
                            FeatureId = 6
                        },
                        new
                        {
                            Id = 137,
                            Available = false,
                            CarId = 11,
                            FeatureId = 7
                        },
                        new
                        {
                            Id = 138,
                            Available = true,
                            CarId = 11,
                            FeatureId = 8
                        },
                        new
                        {
                            Id = 139,
                            Available = false,
                            CarId = 11,
                            FeatureId = 9
                        },
                        new
                        {
                            Id = 140,
                            Available = true,
                            CarId = 11,
                            FeatureId = 10
                        },
                        new
                        {
                            Id = 141,
                            Available = true,
                            CarId = 11,
                            FeatureId = 11
                        },
                        new
                        {
                            Id = 142,
                            Available = true,
                            CarId = 11,
                            FeatureId = 12
                        },
                        new
                        {
                            Id = 143,
                            Available = false,
                            CarId = 11,
                            FeatureId = 13
                        });
                });

            modelBuilder.Entity("CarBook.Domain.Entities.CarReservationPricing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RentalPeriodId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("RentalPeriodId");

                    b.ToTable("CarReservationPricings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 1,
                            Price = 30.00m,
                            RentalPeriodId = 1
                        },
                        new
                        {
                            Id = 2,
                            CarId = 1,
                            Price = 150.00m,
                            RentalPeriodId = 2
                        },
                        new
                        {
                            Id = 3,
                            CarId = 1,
                            Price = 600.00m,
                            RentalPeriodId = 3
                        },
                        new
                        {
                            Id = 4,
                            CarId = 2,
                            Price = 45.00m,
                            RentalPeriodId = 1
                        },
                        new
                        {
                            Id = 5,
                            CarId = 2,
                            Price = 250.00m,
                            RentalPeriodId = 2
                        },
                        new
                        {
                            Id = 6,
                            CarId = 2,
                            Price = 550.00m,
                            RentalPeriodId = 3
                        },
                        new
                        {
                            Id = 7,
                            CarId = 3,
                            Price = 70.00m,
                            RentalPeriodId = 1
                        },
                        new
                        {
                            Id = 8,
                            CarId = 3,
                            Price = 400.00m,
                            RentalPeriodId = 2
                        },
                        new
                        {
                            Id = 9,
                            CarId = 3,
                            Price = 1000.00m,
                            RentalPeriodId = 3
                        },
                        new
                        {
                            Id = 10,
                            CarId = 4,
                            Price = 35.00m,
                            RentalPeriodId = 1
                        },
                        new
                        {
                            Id = 11,
                            CarId = 4,
                            Price = 110.00m,
                            RentalPeriodId = 2
                        },
                        new
                        {
                            Id = 12,
                            CarId = 4,
                            Price = 320.00m,
                            RentalPeriodId = 3
                        },
                        new
                        {
                            Id = 13,
                            CarId = 5,
                            Price = 40.00m,
                            RentalPeriodId = 1
                        },
                        new
                        {
                            Id = 14,
                            CarId = 5,
                            Price = 110.00m,
                            RentalPeriodId = 2
                        },
                        new
                        {
                            Id = 15,
                            CarId = 5,
                            Price = 650.00m,
                            RentalPeriodId = 3
                        },
                        new
                        {
                            Id = 16,
                            CarId = 6,
                            Price = 45.00m,
                            RentalPeriodId = 1
                        },
                        new
                        {
                            Id = 17,
                            CarId = 6,
                            Price = 130.00m,
                            RentalPeriodId = 2
                        },
                        new
                        {
                            Id = 18,
                            CarId = 6,
                            Price = 700.00m,
                            RentalPeriodId = 3
                        },
                        new
                        {
                            Id = 19,
                            CarId = 7,
                            Price = 50.00m,
                            RentalPeriodId = 1
                        },
                        new
                        {
                            Id = 20,
                            CarId = 7,
                            Price = 220.00m,
                            RentalPeriodId = 2
                        },
                        new
                        {
                            Id = 21,
                            CarId = 7,
                            Price = 1000.00m,
                            RentalPeriodId = 3
                        },
                        new
                        {
                            Id = 22,
                            CarId = 8,
                            Price = 30.00m,
                            RentalPeriodId = 1
                        },
                        new
                        {
                            Id = 23,
                            CarId = 8,
                            Price = 100.00m,
                            RentalPeriodId = 2
                        },
                        new
                        {
                            Id = 24,
                            CarId = 8,
                            Price = 650.00m,
                            RentalPeriodId = 3
                        },
                        new
                        {
                            Id = 25,
                            CarId = 9,
                            Price = 80.00m,
                            RentalPeriodId = 1
                        },
                        new
                        {
                            Id = 26,
                            CarId = 9,
                            Price = 400.00m,
                            RentalPeriodId = 2
                        },
                        new
                        {
                            Id = 27,
                            CarId = 9,
                            Price = 950.00m,
                            RentalPeriodId = 3
                        },
                        new
                        {
                            Id = 28,
                            CarId = 10,
                            Price = 20.00m,
                            RentalPeriodId = 1
                        },
                        new
                        {
                            Id = 29,
                            CarId = 10,
                            Price = 90.00m,
                            RentalPeriodId = 2
                        },
                        new
                        {
                            Id = 30,
                            CarId = 10,
                            Price = 240.00m,
                            RentalPeriodId = 3
                        },
                        new
                        {
                            Id = 31,
                            CarId = 11,
                            Price = 15.00m,
                            RentalPeriodId = 1
                        },
                        new
                        {
                            Id = 32,
                            CarId = 11,
                            Price = 70.00m,
                            RentalPeriodId = 2
                        },
                        new
                        {
                            Id = 33,
                            CarId = 11,
                            Price = 300.00m,
                            RentalPeriodId = 3
                        });
                });

            modelBuilder.Entity("CarBook.Domain.Entities.CarReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("RatingStarCount")
                        .HasColumnType("int");

                    b.Property<string>("Review")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CarReviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 1,
                            CustomerId = 1,
                            RatingStarCount = 5,
                            Review = "Amazing performance and design! The GT500 is a beast on the road.",
                            ReviewDate = new DateTime(2024, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CarId = 2,
                            CustomerId = 2,
                            RatingStarCount = 4,
                            Review = "Smooth drive, luxurious feel, but a bit expensive.",
                            ReviewDate = new DateTime(2024, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CarId = 3,
                            CustomerId = 3,
                            RatingStarCount = 5,
                            Review = "Absolutely stunning car, breathtaking speed and handling.",
                            ReviewDate = new DateTime(2024, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CarId = 4,
                            CustomerId = 4,
                            RatingStarCount = 4,
                            Review = "Great for off-roading, very comfortable and stylish.",
                            ReviewDate = new DateTime(2024, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CarId = 5,
                            CustomerId = 5,
                            RatingStarCount = 5,
                            Review = "Classic M3 experience—responsive and powerful.",
                            ReviewDate = new DateTime(2024, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CarId = 6,
                            CustomerId = 6,
                            RatingStarCount = 5,
                            Review = "A true beauty! The 8C Spider has a fantastic sound and feel.",
                            ReviewDate = new DateTime(2024, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CarId = 7,
                            CustomerId = 7,
                            RatingStarCount = 3,
                            Review = "A stylish, comfortable ride with plenty of features. Love the performance and handling!",
                            ReviewDate = new DateTime(2024, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            CarId = 8,
                            CustomerId = 8,
                            RatingStarCount = 5,
                            Review = "The ultimate adventure vehicle! Handles rough terrains like a pro.",
                            ReviewDate = new DateTime(2024, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            CarId = 9,
                            CustomerId = 9,
                            RatingStarCount = 4,
                            Review = "Great performance but a little overpriced.",
                            ReviewDate = new DateTime(2024, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            CarId = 10,
                            CustomerId = 10,
                            RatingStarCount = 5,
                            Review = "Compact and stylish, perfect for city driving.",
                            ReviewDate = new DateTime(2024, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            CarId = 11,
                            CustomerId = 10,
                            RatingStarCount = 4,
                            Review = "Compact, efficient, and fun to drive. A great city car, but could use a bit more power.",
                            ReviewDate = new DateTime(2024, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("CarBook.Domain.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "john.doe@example.com",
                            Message = "I would like to inquire about booking a sedan for a weekend trip. Please let me know the availability and pricing details.",
                            Name = "John Doe",
                            SendDate = new DateTime(2024, 10, 22, 5, 25, 0, 0, DateTimeKind.Unspecified),
                            Subject = "Booking Inquiry - Sedan"
                        },
                        new
                        {
                            Id = 2,
                            Email = "jane.smith@example.com",
                            Message = "I'm interested in renting an SUV for a family vacation next month. Could you provide information on availability and the rental terms?",
                            Name = "Jane Smith",
                            SendDate = new DateTime(2024, 11, 27, 13, 35, 0, 0, DateTimeKind.Unspecified),
                            Subject = "Car Rental Request - SUV"
                        });
                });

            modelBuilder.Entity("CarBook.Domain.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "johndoe@example.com",
                            FirstName = "John",
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 2,
                            Email = "janesmith@example.com",
                            FirstName = "Jane",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 3,
                            Email = "michaelbrown@example.com",
                            FirstName = "Michael",
                            LastName = "Brown"
                        },
                        new
                        {
                            Id = 4,
                            Email = "emilydavis@example.com",
                            FirstName = "Emily",
                            LastName = "Davis"
                        },
                        new
                        {
                            Id = 5,
                            Email = "davidwilson@example.com",
                            FirstName = "David",
                            LastName = "Wilson"
                        },
                        new
                        {
                            Id = 6,
                            Email = "sarahmiller@example.com",
                            FirstName = "Sarah",
                            LastName = "Miller"
                        },
                        new
                        {
                            Id = 7,
                            Email = "jamesanderson@example.com",
                            FirstName = "James",
                            LastName = "Anderson"
                        },
                        new
                        {
                            Id = 8,
                            Email = "jessicataylor@example.com",
                            FirstName = "Jessica",
                            LastName = "Taylor"
                        },
                        new
                        {
                            Id = 9,
                            Email = "robertmoore@example.com",
                            FirstName = "Robert",
                            LastName = "Moore"
                        },
                        new
                        {
                            Id = 10,
                            Email = "emmaclark@example.com",
                            FirstName = "Emma",
                            LastName = "Clark"
                        });
                });

            modelBuilder.Entity("CarBook.Domain.Entities.Feature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Features");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "ABS"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Airbag"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Wifi"
                        },
                        new
                        {
                            Id = 4,
                            Name = "GPS"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Car Kit"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Seat Belt"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Child Seat"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Bluetooth"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Onboard Computer"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Remote central locking"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Music"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Climate control"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Airconditions"
                        });
                });

            modelBuilder.Entity("CarBook.Domain.Entities.FooterAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FooterAddresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Auto Lane, Car City, CC 12345, USA",
                            Description = "Carbook - Your go-to platform for all things related to cars, from buying to selling and beyond.",
                            Email = "contact@carbook.com",
                            Phone = "+1 123 456 7890"
                        });
                });

            modelBuilder.Entity("CarBook.Domain.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Los Angeles International Airport (LAX)"
                        },
                        new
                        {
                            Id = 2,
                            Name = "John F. Kennedy International Airport (JFK)"
                        },
                        new
                        {
                            Id = 3,
                            Name = "O'Hare International Airport (ORD)"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Miami International Airport (MIA)"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Dallas/Fort Worth International Airport (DFW)"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Denver International Airport (DEN)"
                        });
                });

            modelBuilder.Entity("CarBook.Domain.Entities.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            Name = "GT500"
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 2,
                            Name = "SLK55"
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 4,
                            Name = "P1"
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 3,
                            Name = "Evoque"
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 5,
                            Name = "M3"
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 6,
                            Name = "8C Spider"
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 2,
                            Name = "CLE 300"
                        },
                        new
                        {
                            Id = 8,
                            BrandId = 7,
                            Name = "Wrangler Rubicon"
                        },
                        new
                        {
                            Id = 9,
                            BrandId = 2,
                            Name = "GT Coupe"
                        },
                        new
                        {
                            Id = 10,
                            BrandId = 2,
                            Name = "A180"
                        },
                        new
                        {
                            Id = 11,
                            BrandId = 8,
                            Name = "A1"
                        });
                });

            modelBuilder.Entity("CarBook.Domain.Entities.RentalCar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId")
                        .IsUnique();

                    b.HasIndex("LocationId");

                    b.ToTable("RentalCars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 1,
                            IsAvailable = true,
                            LocationId = 1
                        },
                        new
                        {
                            Id = 2,
                            CarId = 2,
                            IsAvailable = true,
                            LocationId = 2
                        },
                        new
                        {
                            Id = 3,
                            CarId = 3,
                            IsAvailable = true,
                            LocationId = 3
                        },
                        new
                        {
                            Id = 4,
                            CarId = 4,
                            IsAvailable = true,
                            LocationId = 4
                        },
                        new
                        {
                            Id = 5,
                            CarId = 5,
                            IsAvailable = true,
                            LocationId = 5
                        },
                        new
                        {
                            Id = 6,
                            CarId = 6,
                            IsAvailable = true,
                            LocationId = 6
                        },
                        new
                        {
                            Id = 7,
                            CarId = 7,
                            IsAvailable = true,
                            LocationId = 1
                        },
                        new
                        {
                            Id = 8,
                            CarId = 8,
                            IsAvailable = true,
                            LocationId = 2
                        },
                        new
                        {
                            Id = 9,
                            CarId = 9,
                            IsAvailable = true,
                            LocationId = 3
                        },
                        new
                        {
                            Id = 10,
                            CarId = 10,
                            IsAvailable = true,
                            LocationId = 4
                        },
                        new
                        {
                            Id = 11,
                            CarId = 11,
                            IsAvailable = true,
                            LocationId = 5
                        });
                });

            modelBuilder.Entity("CarBook.Domain.Entities.RentalPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RentalPeriods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Hour"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Day"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Week"
                        });
                });

            modelBuilder.Entity("CarBook.Domain.Entities.RentalRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("CarName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerFullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("ExceptedReturnDate")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("ExceptedReturnTime")
                        .HasColumnType("time");

                    b.Property<int>("ExpectedReturnLocationId")
                        .HasColumnType("int");

                    b.Property<string>("ExpectedReturnLocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PickUpDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PickUpLocationId")
                        .HasColumnType("int");

                    b.Property<string>("PickupLocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("RentDate")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("RentTime")
                        .HasColumnType("time");

                    b.Property<DateOnly?>("ReturnDate")
                        .HasColumnType("date");

                    b.Property<string>("ReturnDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReturnLocationId")
                        .HasColumnType("int");

                    b.Property<string>("ReturnLocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly?>("ReturnTime")
                        .HasColumnType("time");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("RentalRecords");
                });

            modelBuilder.Entity("CarBook.Domain.Entities.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DropOffLocationId")
                        .HasColumnType("int");

                    b.Property<int>("PickUpLocationId")
                        .HasColumnType("int");

                    b.Property<int?>("RentalCarId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("DropOffLocationId");

                    b.HasIndex("PickUpLocationId");

                    b.HasIndex("RentalCarId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("CarBook.Domain.Entities.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Convenient rides to and from the airport with timely pickups and drop-offs.",
                            IconUrl = "flaticon-route",
                            Title = "Airport Transfer"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Explore the city's landmarks and attractions with personalized car tours.",
                            IconUrl = "flaticon-transportation",
                            Title = "City Tour"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Plan your long-distance journeys with comfortable and reliable outstation cabs.",
                            IconUrl = "flaticon-route",
                            Title = "Outstation Rides"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Travel in style and comfort with our premium car selection.",
                            IconUrl = "flaticon-suv",
                            Title = "Luxury Cars"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Book a car with a driver for a flexible duration, charged on an hourly basis.",
                            IconUrl = "flaticon-car",
                            Title = "Hourly Rentals"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Seamless transportation for weddings, parties, and other special occasions.",
                            IconUrl = "flaticon-route",
                            Title = "Event Transport"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Safe and reliable transportation services for students.",
                            IconUrl = "flaticon-backpack",
                            Title = "School Pickup and Drop"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Professional transportation solutions for your business travel needs.",
                            IconUrl = "flaticon-handshake",
                            Title = "Corporate Travel"
                        });
                });

            modelBuilder.Entity("CarBook.Domain.Entities.SocialMedia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SocialMedias");
                });

            modelBuilder.Entity("CarBook.Domain.Entities.Testimonial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Testimonials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "I've always had a passion for classic cars, and the way they combine craftsmanship and style is unmatched. The '67 Mustang will always be my favorite.",
                            ImageUrl = "/website-template/images/person_1.jpg",
                            Name = "Roger Scott",
                            Title = "Car Enthusiast"
                        },
                        new
                        {
                            Id = 2,
                            Comment = "Modern cars are a marvel of engineering, with all the tech and safety features. I’m fascinated by electric vehicles and how they’re changing the landscape of the industry.",
                            ImageUrl = "/website-template/images/person_2.jpg",
                            Name = "Emily Brown",
                            Title = "Automotive Engineer"
                        },
                        new
                        {
                            Id = 3,
                            Comment = "There's nothing like the satisfaction of restoring an old car. The sound of a perfectly tuned engine is music to my ears.",
                            ImageUrl = "/website-template/images/person_3.jpg",
                            Name = "John Doe",
                            Title = "Mechanic"
                        },
                        new
                        {
                            Id = 4,
                            Comment = "I’ve been covering racing for over a decade. The speed, the skill, and the technology behind motorsport are absolutely thrilling to witness.",
                            ImageUrl = "/website-template/images/person_4.jpg",
                            Name = "Anna Smith",
                            Title = "Motorsport Journalist"
                        },
                        new
                        {
                            Id = 5,
                            Comment = "For me, cars are more than just transportation. They represent history and craftsmanship. Owning a piece of automotive history, like a Ferrari 250 GTO, is a dream come true.",
                            ImageUrl = "/website-template/images/person_1.jpg",
                            Name = "Michael Johnson",
                            Title = "Car Collector"
                        },
                        new
                        {
                            Id = 6,
                            Comment = "I believe in the future of electric cars and their potential to transform our cities and reduce our carbon footprint. It’s exciting to see how fast the technology is advancing.",
                            ImageUrl = "/website-template/images/person_2.jpg",
                            Name = "Sophia Davis",
                            Title = "Sustainability Advocate"
                        },
                        new
                        {
                            Id = 7,
                            Comment = "Designing cars is about balancing aesthetics, functionality, and performance. It's thrilling to see the latest models on the road, knowing we had a hand in creating them.",
                            ImageUrl = "/website-template/images/person_3.jpg",
                            Name = "James Wilson",
                            Title = "Car Designer"
                        });
                });

            modelBuilder.Entity("CarBook.Domain.Entities.Blog", b =>
                {
                    b.HasOne("CarBook.Domain.Entities.BlogAuthor", "BlogAuthor")
                        .WithMany("Blogs")
                        .HasForeignKey("BlogAuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarBook.Domain.Entities.BlogCategory", "BlogCategory")
                        .WithMany("Blogs")
                        .HasForeignKey("BlogCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BlogAuthor");

                    b.Navigation("BlogCategory");
                });

            modelBuilder.Entity("CarBook.Domain.Entities.BlogComment", b =>
                {
                    b.HasOne("CarBook.Domain.Entities.Blog", "Blog")
                        .WithMany("BlogComments")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blog");
                });

            modelBuilder.Entity("CarBook.Domain.Entities.BlogTagCloud", b =>
                {
                    b.HasOne("CarBook.Domain.Entities.Blog", "Blog")
                        .WithMany("BlogTagClouds")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarBook.Domain.Entities.BlogTag", "BlogTag")
                        .WithMany("BlogTagClouds")
                        .HasForeignKey("BlogTagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blog");

                    b.Navigation("BlogTag");
                });

            modelBuilder.Entity("CarBook.Domain.Entities.Car", b =>
                {
                    b.HasOne("CarBook.Domain.Entities.Model", "Model")
                        .WithMany("Cars")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");
                });

            modelBuilder.Entity("CarBook.Domain.Entities.CarDescription", b =>
                {
                    b.HasOne("CarBook.Domain.Entities.Car", "Car")
                        .WithMany("CarDescriptions")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("CarBook.Domain.Entities.CarFeature", b =>
                {
                    b.HasOne("CarBook.Domain.Entities.Car", "Car")
                        .WithMany("CarFeatures")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarBook.Domain.Entities.Feature", "Feature")
                        .WithMany("CarFeatures")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Feature");
                });

            modelBuilder.Entity("CarBook.Domain.Entities.CarReservationPricing", b =>
                {
                    b.HasOne("CarBook.Domain.Entities.Car", "Car")
                        .WithMany("CarReservationPricings")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarBook.Domain.Entities.RentalPeriod", "RentalPeriod")
                        .WithMany("CarReservationPricings")
                        .HasForeignKey("RentalPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("RentalPeriod");
                });

            modelBuilder.Entity("CarBook.Domain.Entities.CarReview", b =>
                {
                    b.HasOne("CarBook.Domain.Entities.Car", "Car")
                        .WithMany("CarReviews")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarBook.Domain.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CarBook.Domain.Entities.Model", b =>
                {
                    b.HasOne("CarBook.Domain.Entities.Brand", "Brand")
                        .WithMany("Models")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("CarBook.Domain.Entities.RentalCar", b =>
                {
                    b.HasOne("CarBook.Domain.Entities.Car", "Car")
                        .WithOne("RentalCar")
                        .HasForeignKey("CarBook.Domain.Entities.RentalCar", "CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarBook.Domain.Entities.Location", "Location")
                        .WithMany("RentalCars")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("CarBook.Domain.Entities.RentalRecord", b =>
                {
                    b.HasOne("CarBook.Domain.Entities.Customer", "Customer")
                        .WithMany("RentalRecords")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CarBook.Domain.Entities.Reservation", b =>
                {
                    b.HasOne("CarBook.Domain.Entities.Car", "Car")
                        .WithMany("Reservations")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarBook.Domain.Entities.Location", "DropOffLocation")
                        .WithMany("DropOffReservations")
                        .HasForeignKey("DropOffLocationId")
                        .IsRequired();

                    b.HasOne("CarBook.Domain.Entities.Location", "PickUpLocation")
                        .WithMany("PickUpReservations")
                        .HasForeignKey("PickUpLocationId")
                        .IsRequired();

                    b.HasOne("CarBook.Domain.Entities.RentalCar", null)
                        .WithMany("Reservations")
                        .HasForeignKey("RentalCarId");

                    b.Navigation("Car");

                    b.Navigation("DropOffLocation");

                    b.Navigation("PickUpLocation");
                });

            modelBuilder.Entity("CarBook.Domain.Entities.Blog", b =>
                {
                    b.Navigation("BlogComments");

                    b.Navigation("BlogTagClouds");
                });

            modelBuilder.Entity("CarBook.Domain.Entities.BlogAuthor", b =>
                {
                    b.Navigation("Blogs");
                });

            modelBuilder.Entity("CarBook.Domain.Entities.BlogCategory", b =>
                {
                    b.Navigation("Blogs");
                });

            modelBuilder.Entity("CarBook.Domain.Entities.BlogTag", b =>
                {
                    b.Navigation("BlogTagClouds");
                });

            modelBuilder.Entity("CarBook.Domain.Entities.Brand", b =>
                {
                    b.Navigation("Models");
                });

            modelBuilder.Entity("CarBook.Domain.Entities.Car", b =>
                {
                    b.Navigation("CarDescriptions");

                    b.Navigation("CarFeatures");

                    b.Navigation("CarReservationPricings");

                    b.Navigation("CarReviews");

                    b.Navigation("RentalCar");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("CarBook.Domain.Entities.Customer", b =>
                {
                    b.Navigation("RentalRecords");
                });

            modelBuilder.Entity("CarBook.Domain.Entities.Feature", b =>
                {
                    b.Navigation("CarFeatures");
                });

            modelBuilder.Entity("CarBook.Domain.Entities.Location", b =>
                {
                    b.Navigation("DropOffReservations");

                    b.Navigation("PickUpReservations");

                    b.Navigation("RentalCars");
                });

            modelBuilder.Entity("CarBook.Domain.Entities.Model", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("CarBook.Domain.Entities.RentalCar", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("CarBook.Domain.Entities.RentalPeriod", b =>
                {
                    b.Navigation("CarReservationPricings");
                });
#pragma warning restore 612, 618
        }
    }
}
